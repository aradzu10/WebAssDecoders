#include <stdio.h>
#include <iostream>
#include <fstream>
#include "AES.h"
#include <cassert>
#include <cstring>


using namespace std;

void CBC()
{
  FILE *outfile;
  AES aes(256);
  int plain_len = 36;
  unsigned char plain[] = { 0x61, 0x6c, 0x65, 0x72, 0x74, 0x28, 0x27, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x72, 0x65, 0x2c, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x20, 0x4b, 0x61, 0x6e, 0x6f, 0x62, 0x69, 0x27, 0x29 };
  unsigned char iv[] = { 0x4f, 0x1d, 0x11, 0xff, 0x61, 0x2e, 0x39, 0x4c, 0xc5, 0xcd, 0xee, 0x37, 0xce, 0x79, 0xaa, 0x51 };
  unsigned char key[] = { 0xe7, 0x47, 0xba, 0x04, 0x62, 0xf6, 0x7a, 0xa0, 0xf7, 0x73, 0x82, 0x7e, 0xdc, 0x27, 0x84, 0x28, 0x6a, 0x56, 0x37, 0xc5, 0xe0, 0x17, 0x30, 0x52, 0x87, 0x2a, 0x6c, 0x28, 0xd9, 0xae, 0x49, 0xe4 };

  unsigned int len = 0;
  unsigned char *out = aes.EncryptCBC(plain, plain_len * sizeof(unsigned char), key, iv, len);
  unsigned char *innew = aes.DecryptCBC(out, plain_len * sizeof(unsigned char), key, iv, len);
  assert(!memcmp(innew, plain, 16 * sizeof(unsigned char)));
  cout << "Test CBC [OK]" << endl;

  outfile = fopen ("C:/Projects/WebAssDecoders/phase4/code/encrypted.txt", "wb");
  fwrite (out , sizeof(unsigned char), plain_len, outfile);
  fclose (outfile);

  delete[] out;
  delete[] innew;
}

int main()
{
  CBC();
  return 0;
}